# Environment Configuration Template
# Copy this file to .env.development, .env.staging, .env.production and fill in the values

# Application Configuration
PORT=3000
NODE_ENV=development

# CORS Configuration
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_MAX_AGE=3600

# Database Configuration
# Option 1: Direct PostgreSQL connection (for local development)
DATABASE_URL="postgresql://username:password@localhost:5432/database_name?schema=public"

# Option 2: Prisma Accelerate (for staging/production with AWS RDS)
# DATABASE_URL="prisma+postgres://localhost:51213/?api_key=YOUR_ACCELERATE_API_KEY"

# Option 3: AWS RDS Direct Connection (for production)
# DATABASE_URL="postgresql://username:password@your-rds-endpoint.region.rds.amazonaws.com:5432/database_name?schema=public&sslmode=require"

# AWS Configuration (for production)
# AWS_REGION=ap-northeast-2
# AWS_RDS_ENDPOINT=your-rds-endpoint.region.rds.amazonaws.com
# AWS_RDS_PORT=5432
# AWS_RDS_DATABASE=sweet_order_prod
# AWS_RDS_USERNAME=sweet_order_user
# AWS_RDS_PASSWORD=your_secure_password

# Prisma Accelerate Configuration (optional)
# PRISMA_ACCELERATE_API_KEY=your_accelerate_api_key
# PRISMA_ACCELERATE_SHADOW_DATABASE_URL=postgresql://username:password@localhost:5432/shadow_db?schema=public

# Security Configuration
# JWT_SECRET=your_jwt_secret_key
# ENCRYPTION_KEY=your_encryption_key

# External Services
# REDIS_URL=redis://localhost:6379
# S3_BUCKET_NAME=your-s3-bucket
# S3_REGION=ap-northeast-2
