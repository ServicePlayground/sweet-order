
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  phone: 'phone',
  passwordHash: 'passwordHash',
  name: 'name',
  nickname: 'nickname',
  email: 'email',
  profileImageUrl: 'profileImageUrl',
  isPhoneVerified: 'isPhoneVerified',
  isActive: 'isActive',
  userId: 'userId',
  googleId: 'googleId',
  googleEmail: 'googleEmail',
  createdAt: 'createdAt',
  lastLoginAt: 'lastLoginAt'
};

exports.Prisma.PhoneVerificationScalarFieldEnum = {
  id: 'id',
  phone: 'phone',
  verificationCode: 'verificationCode',
  expiresAt: 'expiresAt',
  isVerified: 'isVerified',
  purpose: 'purpose',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  originalPrice: 'originalPrice',
  salePrice: 'salePrice',
  notice: 'notice',
  caution: 'caution',
  basicIncluded: 'basicIncluded',
  location: 'location',
  likeCount: 'likeCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  orderFormSchema: 'orderFormSchema',
  detailDescription: 'detailDescription',
  productNumber: 'productNumber',
  foodType: 'foodType',
  producer: 'producer',
  manufactureDate: 'manufactureDate',
  packageInfo: 'packageInfo',
  calories: 'calories',
  ingredients: 'ingredients',
  origin: 'origin',
  customerService: 'customerService',
  mainCategory: 'mainCategory',
  subCategory: 'subCategory',
  targetAudience: 'targetAudience',
  sizeRange: 'sizeRange',
  deliveryMethod: 'deliveryMethod',
  deliveryDays: 'deliveryDays',
  hashtags: 'hashtags',
  status: 'status'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  alt: 'alt',
  order: 'order',
  productId: 'productId',
  createdAt: 'createdAt'
};

exports.Prisma.ProductLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  productId: 'productId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ProductStatus = exports.$Enums.ProductStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  OUT_OF_STOCK: 'OUT_OF_STOCK'
};

exports.MainCategory = exports.$Enums.MainCategory = {
  PRODUCT: 'PRODUCT'
};

exports.SubCategory = exports.$Enums.SubCategory = {
  CAKE: 'CAKE'
};

exports.TargetAudience = exports.$Enums.TargetAudience = {
  ADULT: 'ADULT',
  CHILD: 'CHILD',
  PET: 'PET'
};

exports.SizeRange = exports.$Enums.SizeRange = {
  ONE_TO_TWO: 'ONE_TO_TWO',
  TWO_TO_THREE: 'TWO_TO_THREE',
  THREE_TO_FOUR: 'THREE_TO_FOUR',
  FOUR_TO_FIVE: 'FOUR_TO_FIVE',
  FIVE_OR_MORE: 'FIVE_OR_MORE'
};

exports.DeliveryMethod = exports.$Enums.DeliveryMethod = {
  PICKUP: 'PICKUP',
  DELIVERY: 'DELIVERY'
};

exports.DeliveryDays = exports.$Enums.DeliveryDays = {
  SAME_DAY: 'SAME_DAY',
  ONE_TO_TWO: 'ONE_TO_TWO',
  TWO_TO_THREE: 'TWO_TO_THREE',
  THREE_TO_FOUR: 'THREE_TO_FOUR',
  FOUR_TO_FIVE: 'FOUR_TO_FIVE',
  FIVE_TO_SIX: 'FIVE_TO_SIX',
  SIX_TO_SEVEN: 'SIX_TO_SEVEN',
  OVER_WEEK: 'OVER_WEEK'
};

exports.Prisma.ModelName = {
  User: 'User',
  PhoneVerification: 'PhoneVerification',
  Product: 'Product',
  ProductImage: 'ProductImage',
  ProductLike: 'ProductLike'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
